package nuagenetworks

import (
	"errors"
	"log"

	"github.com/hashicorp/terraform/helper/schema"
	"github.com/hashicorp/terraform/terraform"
	"github.com/nuagenetworks/vspk-go/vspk"
)

func Provider() terraform.ResourceProvider {
	return &schema.Provider{
		Schema: map[string]*schema.Schema{
			"username": &schema.Schema{
				Type:        schema.TypeString,
				Required:    true,
				DefaultFunc: schema.EnvDefaultFunc("VSD_USERNAME", "csproot"),
			},
			"password": &schema.Schema{
				Type:        schema.TypeString,
				Required:    true,
				Sensitive:   true,
				DefaultFunc: schema.EnvDefaultFunc("VSD_PASSWORD", "csproot"),
			},
			"certificate_path": &schema.Schema{
				Type:        schema.TypeString,
				Optional:    true,
				DefaultFunc: schema.EnvDefaultFunc("VSD_CERTIFICATE_PATH", nil),
			},
			"key_path": &schema.Schema{
				Type:        schema.TypeString,
				Optional:    true,
				DefaultFunc: schema.EnvDefaultFunc("VSD_KEY_PATH", nil),
			},
			"enterprise": &schema.Schema{
				Type:        schema.TypeString,
				Required:    true,
				DefaultFunc: schema.EnvDefaultFunc("VSD_ORGANIZATION", "csp"),
			},
			"vsd_endpoint": &schema.Schema{
				Type:        schema.TypeString,
				Required:    true,
				DefaultFunc: schema.EnvDefaultFunc("VSD_ENDPOINT", nil),
			},
		},
		ConfigureFunc: providerConfigure,

		ResourcesMap: map[string]*schema.Resource{
			"nuagenetworks_container_interface":                     resourceContainerInterface(),
			"nuagenetworks_qos":                                     resourceQOS(),
			"nuagenetworks_ingress_adv_fwd_entry_template":          resourceIngressAdvFwdEntryTemplate(),
			"nuagenetworks_shared_network_resource":                 resourceSharedNetworkResource(),
			"nuagenetworks_overlay_mirror_destination":              resourceOverlayMirrorDestination(),
			"nuagenetworks_virtual_ip":                              resourceVirtualIP(),
			"nuagenetworks_pspat_map":                               resourcePSPATMap(),
			"nuagenetworks_egress_adv_fwd_entry_template":           resourceEgressAdvFwdEntryTemplate(),
			"nuagenetworks_dscp_forwarding_class_table":             resourceDSCPForwardingClassTable(),
			"nuagenetworks_multi_cast_channel_map":                  resourceMultiCastChannelMap(),
			"nuagenetworks_redundancy_group":                        resourceRedundancyGroup(),
			"nuagenetworks_tca":                                     resourceTCA(),
			"nuagenetworks_group":                                   resourceGroup(),
			"nuagenetworks_vsg_redundant_port":                      resourceVsgRedundantPort(),
			"nuagenetworks_zone":                                    resourceZone(),
			"nuagenetworks_ike_gateway_profile":                     resourceIKEGatewayProfile(),
			"nuagenetworks_ike_subnet":                              resourceIKESubnet(),
			"nuagenetworks_infrastructure_gateway_profile":          resourceInfrastructureGatewayProfile(),
			"nuagenetworks_vpn_connection":                          resourceVPNConnection(),
			"nuagenetworks_duc_group":                               resourceDUCGroup(),
			"nuagenetworks_enterprise_network":                      resourceEnterpriseNetwork(),
			"nuagenetworks_infrastructure_vsc_profile":              resourceInfrastructureVscProfile(),
			"nuagenetworks_permission":                              resourcePermission(),
			"nuagenetworks_captive_portal_profile":                  resourceCaptivePortalProfile(),
			"nuagenetworks_cos_remarking_policy":                    resourceCOSRemarkingPolicy(),
			"nuagenetworks_l4_service_group":                        resourceL4ServiceGroup(),
			"nuagenetworks_ip_reservation":                          resourceIPReservation(),
			"nuagenetworks_redirection_target_template":             resourceRedirectionTargetTemplate(),
			"nuagenetworks_subnet_template":                         resourceSubnetTemplate(),
			"nuagenetworks_vnf_domain_mapping":                      resourceVNFDomainMapping(),
			"nuagenetworks_floating_ipacl_template":                 resourceFloatingIPACLTemplate(),
			"nuagenetworks_ike_gateway_connection":                  resourceIKEGatewayConnection(),
			"nuagenetworks_ingress_adv_fwd_template":                resourceIngressAdvFwdTemplate(),
			"nuagenetworks_redirection_target":                      resourceRedirectionTarget(),
			"nuagenetworks_firewall_acl":                            resourceFirewallAcl(),
			"nuagenetworks_patip_entry":                             resourcePATIPEntry(),
			"nuagenetworks_egress_acl_entry_template":               resourceEgressACLEntryTemplate(),
			"nuagenetworks_ingress_external_service_template_entry": resourceIngressExternalServiceTemplateEntry(),
			"nuagenetworks_avatar":                                  resourceAvatar(),
			"nuagenetworks_overlay_address_pool":                    resourceOverlayAddressPool(),
			"nuagenetworks_bootstrap_activation":                    resourceBootstrapActivation(),
			"nuagenetworks_cloud_mgmt_system":                       resourceCloudMgmtSystem(),
			"nuagenetworks_domain":                                  resourceDomain(),
			"nuagenetworks_redundant_port":                          resourceRedundantPort(),
			"nuagenetworks_proxy_arp_filter":                        resourceProxyARPFilter(),
			"nuagenetworks_nsg_patch_profile":                       resourceNSGPatchProfile(),
			"nuagenetworks_dscp_forwarding_class_mapping":           resourceDSCPForwardingClassMapping(),
			"nuagenetworks_policy_object_group":                     resourcePolicyObjectGroup(),
			"nuagenetworks_l4_service":                              resourceL4Service(),
			"nuagenetworks_overlay_patnat_entry":                    resourceOverlayPATNATEntry(),
			"nuagenetworks_wan_service":                             resourceWANService(),
			"nuagenetworks_vnf_interface_descriptor":                resourceVNFInterfaceDescriptor(),
			"nuagenetworks_zfb_auto_assignment":                     resourceZFBAutoAssignment(),
			"nuagenetworks_vport":                                   resourceVPort(),
			"nuagenetworks_port":                                    resourcePort(),
			"nuagenetworks_policy_statement":                        resourcePolicyStatement(),
			"nuagenetworks_statistics_policy":                       resourceStatisticsPolicy(),
			"nuagenetworks_subnet":                                  resourceSubnet(),
			"nuagenetworks_container":                               resourceContainer(),
			"nuagenetworks_rate_limiter":                            resourceRateLimiter(),
			"nuagenetworks_key_server_monitor_encrypted_seed":       resourceKeyServerMonitorEncryptedSeed(),
			"nuagenetworks_policy_entry":                            resourcePolicyEntry(),
			"nuagenetworks_metadata":                                resourceMetadata(),
			"nuagenetworks_zone_template":                           resourceZoneTemplate(),
			"nuagenetworks_key_server_monitor_seed":                 resourceKeyServerMonitorSeed(),
			"nuagenetworks_gateway_template":                        resourceGatewayTemplate(),
			"nuagenetworks_l2_domain_template":                      resourceL2DomainTemplate(),
			"nuagenetworks_vlan":                                    resourceVLAN(),
			"nuagenetworks_overlay_mirror_destination_template":     resourceOverlayMirrorDestinationTemplate(),
			"nuagenetworks_zfb_request":                             resourceZFBRequest(),
			"nuagenetworks_enterprise_permission":                   resourceEnterprisePermission(),
			"nuagenetworks_static_route":                            resourceStaticRoute(),
			"nuagenetworks_connectionendpoint":                      resourceConnectionendpoint(),
			"nuagenetworks_job":                                     resourceJob(),
			"nuagenetworks_vm_interface":                            resourceVMInterface(),
			"nuagenetworks_gateway_secured_data":                    resourceGatewaySecuredData(),
			"nuagenetworks_trunk":                                   resourceTrunk(),
			"nuagenetworks_vnf_descriptor":                          resourceVNFDescriptor(),
			"nuagenetworks_duc_group_binding":                       resourceDUCGroupBinding(),
			"nuagenetworks_license":                                 resourceLicense(),
			"nuagenetworks_enterprise_profile":                      resourceEnterpriseProfile(),
			"nuagenetworks_performance_monitor":                     resourcePerformanceMonitor(),
			"nuagenetworks_policy_group_template":                   resourcePolicyGroupTemplate(),
			"nuagenetworks_bridge_interface":                        resourceBridgeInterface(),
			"nuagenetworks_vcenter_cluster":                         resourceVCenterCluster(),
			"nuagenetworks_pg_expression":                           resourcePGExpression(),
			"nuagenetworks_dscp_remarking_policy":                   resourceDSCPRemarkingPolicy(),
			"nuagenetworks_ssid_connection":                         resourceSSIDConnection(),
			"nuagenetworks_network_macro_group":                     resourceNetworkMacroGroup(),
			"nuagenetworks_infrastructure_access_profile":           resourceInfrastructureAccessProfile(),
			"nuagenetworks_application_binding":                     resourceApplicationBinding(),
			"nuagenetworks_destinationurl":                          resourceDestinationurl(),
			"nuagenetworks_next_hop":                                resourceNextHop(),
			"nuagenetworks_mirror_destination":                      resourceMirrorDestination(),
			"nuagenetworks_nat_map_entry":                           resourceNATMapEntry(),
			"nuagenetworks_domain_fip_acl_template":                 resourceDomainFIPAclTemplate(),
			"nuagenetworks_ospf_interface":                          resourceOSPFInterface(),
			"nuagenetworks_address_map":                             resourceAddressMap(),
			"nuagenetworks_underlay":                                resourceUnderlay(),
			"nuagenetworks_gateway":                                 resourceGateway(),
			"nuagenetworks_egress_qos_policy":                       resourceEgressQOSPolicy(),
			"nuagenetworks_vm":                                      resourceVM(),
			"nuagenetworks_bfd_session":                             resourceBFDSession(),
			"nuagenetworks_ns_port_template":                        resourceNSPortTemplate(),
			"nuagenetworks_ssh_key":                                 resourceSSHKey(),
			"nuagenetworks_certificate":                             resourceCertificate(),
			"nuagenetworks_vcenter_data_center":                     resourceVCenterDataCenter(),
			"nuagenetworks_custom_property":                         resourceCustomProperty(),
			"nuagenetworks_ltestatistics":                           resourceLtestatistics(),
			"nuagenetworks_virtual_firewall_rule":                   resourceVirtualFirewallRule(),
			"nuagenetworks_dscp_remarking_policy_table":             resourceDSCPRemarkingPolicyTable(),
			"nuagenetworks_vrs_redeploymentpolicy":                  resourceVRSRedeploymentpolicy(),
			"nuagenetworks_p_translation_map":                       resourcePTranslationMap(),
			"nuagenetworks_ike_gateway":                             resourceIKEGateway(),
			"nuagenetworks_csnat_pool":                              resourceCSNATPool(),
			"nuagenetworks_vcenter":                                 resourceVCenter(),
			"nuagenetworks_ingress_acl_entry_template":              resourceIngressACLEntryTemplate(),
			"nuagenetworks_ingress_qos_policy":                      resourceIngressQOSPolicy(),
			"nuagenetworks_routing_policy":                          resourceRoutingPolicy(),
			"nuagenetworks_network_performance_binding":             resourceNetworkPerformanceBinding(),
			"nuagenetworks_vnf_threshold_policy":                    resourceVNFThresholdPolicy(),
			"nuagenetworks_l2_domain":                               resourceL2Domain(),
			"nuagenetworks_host_interface":                          resourceHostInterface(),
			"nuagenetworks_enterprise_secured_data":                 resourceEnterpriseSecuredData(),
			"nuagenetworks_applicationperformancemanagement":        resourceApplicationperformancemanagement(),
			"nuagenetworks_qos_policer":                             resourceQosPolicer(),
			"nuagenetworks_ike_certificate":                         resourceIKECertificate(),
			"nuagenetworks_ingress_external_service_template":       resourceIngressExternalServiceTemplate(),
			"nuagenetworks_port_template":                           resourcePortTemplate(),
			"nuagenetworks_egress_adv_fwd_template":                 resourceEgressAdvFwdTemplate(),
			"nuagenetworks_dhcp_option":                             resourceDHCPOption(),
			"nuagenetworks_key_server_member":                       resourceKeyServerMember(),
			"nuagenetworks_ns_gateway":                              resourceNSGateway(),
			"nuagenetworks_ns_gateway_template":                     resourceNSGatewayTemplate(),
			"nuagenetworks_nsg_group":                               resourceNSGGroup(),
			"nuagenetworks_site_info":                               resourceSiteInfo(),
			"nuagenetworks_ns_port":                                 resourceNSPort(),
			"nuagenetworks_nsg_routing_policy_binding":              resourceNSGRoutingPolicyBinding(),
			"nuagenetworks_vrs_address_range":                       resourceVRSAddressRange(),
			"nuagenetworks_bgp_profile":                             resourceBGPProfile(),
			"nuagenetworks_c_translation_map":                       resourceCTranslationMap(),
			"nuagenetworks_public_network_macro":                    resourcePublicNetworkMacro(),
			"nuagenetworks_domain_fip_acl_template_entry":           resourceDomainFIPAclTemplateEntry(),
			"nuagenetworks_address_range":                           resourceAddressRange(),
			"nuagenetworks_domain_template":                         resourceDomainTemplate(),
			"nuagenetworks_ospf_instance":                           resourceOSPFInstance(),
			"nuagenetworks_virtual_firewall_policy":                 resourceVirtualFirewallPolicy(),
			"nuagenetworks_vm_resync":                               resourceVMResync(),
			"nuagenetworks_uplink_connection":                       resourceUplinkConnection(),
			"nuagenetworks_pg_expression_template":                  resourcePGExpressionTemplate(),
			"nuagenetworks_applicationperformancemanagementbinding": resourceApplicationperformancemanagementbinding(),
			"nuagenetworks_spat_sources_pool":                       resourceSPATSourcesPool(),
			"nuagenetworks_floating_ip":                             resourceFloatingIp(),
			"nuagenetworks_egress_acl_template":                     resourceEgressACLTemplate(),
			"nuagenetworks_monitorscope":                            resourceMonitorscope(),
			"nuagenetworks_multi_cast_range":                        resourceMultiCastRange(),
			"nuagenetworks_ns_redundant_gateway_group":              resourceNSRedundantGatewayGroup(),
			"nuagenetworks_application":                             resourceApplication(),
			"nuagenetworks_key_server_monitor_sek":                  resourceKeyServerMonitorSEK(),
			"nuagenetworks_cos_remarking_policy_table":              resourceCOSRemarkingPolicyTable(),
			"nuagenetworks_vport_mirror":                            resourceVPortMirror(),
			"nuagenetworks_patnat_pool":                             resourcePATNATPool(),
			"nuagenetworks_pat_mapper":                              resourcePATMapper(),
			"nuagenetworks_psnat_pool":                              resourcePSNATPool(),
			"nuagenetworks_bgp_neighbor":                            resourceBGPNeighbor(),
			"nuagenetworks_container_resync":                        resourceContainerResync(),
			"nuagenetworks_vnf":                                     resourceVNF(),
			"nuagenetworks_ikepsk":                                  resourceIKEPSK(),
			"nuagenetworks_wireless_port":                           resourceWirelessPort(),
			"nuagenetworks_ike_encryptionprofile":                   resourceIKEEncryptionprofile(),
			"nuagenetworks_floating_ipacl_template_entry":           resourceFloatingIPACLTemplateEntry(),
			"nuagenetworks_user":                                    resourceUser(),
			"nuagenetworks_br_connection":                           resourceBRConnection(),
			"nuagenetworks_policy_group":                            resourcePolicyGroup(),
			"nuagenetworks_demarcation_service":                     resourceDemarcationService(),
			"nuagenetworks_firewall_rule":                           resourceFirewallRule(),
			"nuagenetworks_alarm":                                   resourceAlarm(),
			"nuagenetworks_vlan_template":                           resourceVLANTemplate(),
			"nuagenetworks_nsg_upgrade_profile":                     resourceNSGUpgradeProfile(),
			"nuagenetworks_global_metadata":                         resourceGlobalMetadata(),
			"nuagenetworks_network_performance_measurement":         resourceNetworkPerformanceMeasurement(),
			"nuagenetworks_ospf_area":                               resourceOSPFArea(),
			"nuagenetworks_command":                                 resourceCommand(),
			"nuagenetworks_enterprise":                              resourceEnterprise(),
			"nuagenetworks_link":                                    resourceLink(),
			"nuagenetworks_ingress_acl_template":                    resourceIngressACLTemplate(),
			"nuagenetworks_vnf_metadata":                            resourceVNFMetadata(),
			"nuagenetworks_vcenter_hypervisor":                      resourceVCenterHypervisor(),
		},
	}
}

func providerConfigure(d *schema.ResourceData) (interface{}, error) {

	//certPath, okCert := d.GetOk("certificate_path")
	//keyPath, okKey := d.GetOk("key_path")
	//if okCert && okKey {
	//	cert, err := tls.LoadX509KeyPair(certPath.(string), keyPath.(string))
	//	if err != nil {
	//		return s, errors.New("Error loading VSD generated certificates to authenticate with VSD " + err.Error())
	//	}
	//	s, root := vspk.NewX509Session(&cert, d.Get("vsd_endpoint").(string))
	//} else {
	//	s, root := vspk.NewSession(d.Get("username").(string), d.Get("password").(string), d.Get("enterprise").(string), d.Get("vsd_endpoint").(string))
	//}

	s, root := vspk.NewSession(d.Get("username").(string), d.Get("password").(string), d.Get("enterprise").(string), d.Get("vsd_endpoint").(string))

	log.Println("[INFO] Initializing Nuage Networks VSD client")
	err := s.Start()
	if err != nil {
		return s, errors.New("Unable to connect to Nuage VSD: " + err.Description)
	}

	log.Println("[INFO] Nuage Networks VSD client initialized")

	return root, nil
}
